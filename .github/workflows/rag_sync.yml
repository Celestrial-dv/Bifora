name: Cafe24 → Supabase RAG Sync

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "동기화 모드 (incremental | full)"
        required: true
        default: "incremental"
        type: choice
        options: 
          - incremental
          - full
      since:
        description: "증분 기준일(YYYY-MM-DD). full 모드면 비워두세요."
        required: false
        default: ""
        type: string
  schedule:
    # 매일 00:30 KST 실행 (UTC 15:30) - 필요 시 수정 가능, 불필요하면 삭제
    - cron: "30 15 * * *"

jobs:
  run-sync:
    runs-on: ubuntu-latest
    env:
      BASE_URL: ${{ secrets.CAFE24_SYNC_URL }}
      SYNC_TOKEN: ${{ secrets.SYNC_TOKEN }}
    steps:
      - name: 입력 파라미터 정리
        id: prep
        shell: bash
        run: |
          MODE="${{ github.event.inputs.mode }}"
          SINCE="${{ github.event.inputs.since }}"
          if [ -z "$MODE" ]; then MODE="incremental"; fi

          # token 마스킹
          echo "::add-mask::$SYNC_TOKEN"

          # 쿼리스트링 구성
          if [ -n "$SINCE" ] && [ "$MODE" = "incremental" ]; then
            QS="t=$SYNC_TOKEN&m=$MODE&s=$SINCE"
          else
            QS="t=$SYNC_TOKEN&m=$MODE"
          fi

          URL="${BASE_URL}?${QS}"

          # 출력(로그엔 토큰 자동 마스킹)
          echo "REQUEST_URL=${URL}" >> $GITHUB_OUTPUT

      - name: 웹훅 호출
        id: call
        shell: bash
        run: |
          set -euo pipefail
          # 60초 타임아웃 + HTTP 오류 시 본문 포함 실패 처리
          RESP=$(curl -sS --fail-with-body --max-time 60 "${{ steps.prep.outputs.REQUEST_URL }}")
          echo "raw_response<<'END'" >> $GITHUB_OUTPUT
          echo "$RESP" >> $GITHUB_OUTPUT
          echo "END" >> $GITHUB_OUTPUT

      - name: 응답 검사(JSON success/ok 플래그)
        shell: bash
        run: |
          echo '${{ steps.call.outputs.raw_response }}' | jq .
          OK=$(echo '${{ steps.call.outputs.raw_response }}' | jq -r '.success // .ok // empty')
          if [ "$OK" = "true" ] || [ "$OK" = "1" ]; then
            echo "✅ Sync 성공"
          else
            echo "❌ Sync 실패"
            exit 1
          fi
