name: RAG Sync (Cafe24 → Supabase)

on:
  workflow_dispatch:
    inputs:
      mode:  { description: 'full | incremental', required: false, default: 'full' }
      since: { description: 'YYYY-MM-DD (optional)', required: false, default: '' }
      async: { description: '1=background,0=sync', required: false, default: '0' }  # 먼저 동기

  schedule:
    - cron: '0 17 * * *'   # 02:00 KST

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Check secrets
        run: |
          [ -n "${{ secrets.CAFE24_SYNC_URL }}" ] || (echo "CAFE24_SYNC_URL missing" && exit 1)
          [ -n "${{ secrets.SYNC_TOKEN }}" ] || (echo "SYNC_TOKEN missing" && exit 1)

- name: 1) DIAG (must return JSON)
  env:
    DIAG:  ${{ secrets.CAFE24_SYNC_URL }}
    TOKEN: ${{ secrets.SYNC_TOKEN }}
  run: |
    echo "GET $DIAG (diag)"
    CODE=$(curl -sS -G "$DIAG/../sync_diag.php" \
             --data-urlencode "token=$TOKEN" \
             -D diag_headers.txt -o diag_body.txt -w "%{http_code}")
          echo "HTTP_CODE=$CODE"
          echo "----- DIAG headers -----"; cat diag_headers.txt || true
          echo "----- DIAG body -----";    cat diag_body.txt    || true
          if [ "$CODE" != "200" ]; then
            echo "Diag failed"; exit 1
          fi

      - name: 2) SYNC (sync_webhook, GET)
        env:
          URL:    ${{ secrets.CAFE24_SYNC_URL }}
          TOKEN:  ${{ secrets.SYNC_TOKEN }}
          MODE:   ${{ github.event.inputs.mode  || 'full' }}
          SINCE:  ${{ github.event.inputs.since || '' }}
          ASYNC_: ${{ github.event.inputs.async || '0' }}
        run: |
          echo "GET $URL (webhook)"
          CODE=$(curl -sS -G "$URL" \
                   --data-urlencode "t=$TOKEN" \
                   --data-urlencode "m=$MODE" \
                   --data-urlencode "s=$SINCE" \
                   --data-urlencode "async=$ASYNC_" \
                   -D headers.txt -o body.txt -w "%{http_code}")
          echo "HTTP_CODE=$CODE"
          echo "----- SYNC headers -----"; cat headers.txt || true
          echo "----- SYNC body -----";    cat body.txt    || true
          if [ "$CODE" != "200" ] && [ "$CODE" != "202" ]; then
            echo "Sync failed"; exit 1
          fi

      - name: 2.0) URL sanity check (no trailing spaces/slash)
        env:
          URL_RAW: ${{ secrets.CAFE24_SYNC_URL }}
        run: |
          URL_CLEAN=$(printf '%s' "$URL_RAW" | tr -d '\r' | sed -e 's/[[:space:]]\+$//' -e 's:/*$::')
          if [ -z "$URL_CLEAN" ]; then echo "Empty URL"; exit 1; fi
          # 헤더만 확인(200/400이면 경로 존재, 404면 경로 불일치)
          CODE=$(curl -sS -I "$URL_CLEAN" -o /dev/null -w "%{http_code}" || true)
          echo "HEAD $CODE"
          if [ "$CODE" = "404" ]; then echo "Path not found. Check CAFE24_SYNC_URL."; exit 1; fi
          echo "URL_OK"
          echo "URL_CLEAN=$URL_CLEAN" >> $GITHUB_ENV


